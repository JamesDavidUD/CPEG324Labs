$date
  Sun May 01 18:42:58 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 2 ! opcode[1:0] $end
$var reg 8 " a[7:0] $end
$var reg 8 # b[7:0] $end
$var reg 8 $ result[7:0] $end
$var reg 1 % equal $end
$scope module alu8bit1 $end
$var reg 2 & opcode[1:0] $end
$var reg 8 ' a[7:0] $end
$var reg 8 ( b[7:0] $end
$var reg 8 ) result[7:0] $end
$var reg 1 * equal $end
$var reg 8 + b_twos[7:0] $end
$var reg 9 , carry[8:0] $end
$var reg 8 - final[7:0] $end
$var reg 8 . equal_vector[7:0] $end
$scope module full_adder1 $end
$var reg 1 / a $end
$var reg 1 0 b $end
$var reg 1 1 carry_in $end
$var reg 1 2 sum $end
$var reg 1 3 carry_out $end
$upscope $end
$scope module full_adder2 $end
$var reg 1 4 a $end
$var reg 1 5 b $end
$var reg 1 6 carry_in $end
$var reg 1 7 sum $end
$var reg 1 8 carry_out $end
$upscope $end
$scope module full_adder3 $end
$var reg 1 9 a $end
$var reg 1 : b $end
$var reg 1 ; carry_in $end
$var reg 1 < sum $end
$var reg 1 = carry_out $end
$upscope $end
$scope module full_adder4 $end
$var reg 1 > a $end
$var reg 1 ? b $end
$var reg 1 @ carry_in $end
$var reg 1 A sum $end
$var reg 1 B carry_out $end
$upscope $end
$scope module full_adder5 $end
$var reg 1 C a $end
$var reg 1 D b $end
$var reg 1 E carry_in $end
$var reg 1 F sum $end
$var reg 1 G carry_out $end
$upscope $end
$scope module full_adder6 $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J carry_in $end
$var reg 1 K sum $end
$var reg 1 L carry_out $end
$upscope $end
$scope module full_adder7 $end
$var reg 1 M a $end
$var reg 1 N b $end
$var reg 1 O carry_in $end
$var reg 1 P sum $end
$var reg 1 Q carry_out $end
$upscope $end
$scope module full_adder8 $end
$var reg 1 R a $end
$var reg 1 S b $end
$var reg 1 T carry_in $end
$var reg 1 U sum $end
$var reg 1 V carry_out $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00 !
b00000000 "
b00000000 #
b00000000 $
0%
b00 &
b00000000 '
b00000000 (
b00000000 )
0*
b00000000 +
b000000000 ,
b00000000 -
b11111111 .
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
#5000000
b00000001 "
b00000001 #
b00000010 $
b00000001 '
b00000001 (
b00000010 )
b00000001 +
b000000010 ,
b00000010 -
1/
10
02
13
16
17
#10000000
b01 !
b00000011 "
b00000010 #
b00000001 $
b01 &
b00000011 '
b00000010 (
b00000001 )
b11111101 +
b111111111 ,
b00000001 -
b11111110 .
11
12
14
07
18
1:
1;
1=
1?
1@
0A
1B
1D
1E
0F
1G
1I
1J
0K
1L
1N
1O
0P
1Q
1S
1T
0U
1V
#15000000
b10 !
b00000111 "
b00000001 #
b00000111 $
b10 &
b00000111 '
b00000001 (
b00000111 )
b00000001 +
b000001110 ,
b00001000 -
b11111001 .
01
02
19
0:
0<
0?
1A
0B
0D
0E
0F
0G
0I
0J
0K
0L
0N
0O
0P
0Q
0S
0T
0U
0V
#20000000
b11 !
b00000111 #
1%
b11 &
b00000111 (
1*
b11111000 +
b111111111 ,
b00000000 -
b11111111 .
00
11
1?
0A
1B
1D
1E
0F
1G
1I
1J
0K
1L
1N
1O
0P
1Q
1S
1T
0U
1V
#25000000
b00000110 #
0%
b00000110 (
0*
b11111001 +
b00000001 -
b11111110 .
10
12
#30000000
